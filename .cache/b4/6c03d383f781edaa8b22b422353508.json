{"id":"src/index.js","dependencies":[{"name":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/package.json","includedInParent":true,"mtime":1556659791958},{"name":"./styles.css","loc":{"line":1,"column":7},"parent":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/index.js","resolved":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/styles.css"},{"name":"./board.js","loc":{"line":3,"column":24},"parent":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/index.js","resolved":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/board.js"},{"name":"child_process","loc":{"line":4,"column":22},"parent":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/index.js","resolved":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/node_modules/parcel-bundler/src/builtins/_empty.js"},{"name":"./draw-board.js","loc":{"line":5,"column":24},"parent":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/index.js","resolved":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/draw-board.js"},{"name":"./game-app.js","loc":{"line":6,"column":7},"parent":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/index.js","resolved":"/Users/hannahingham/Documents/cf-directory/professioal/projects/chess-client/src/game-app.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"./styles.css\");\n\nvar _board = _interopRequireDefault(require(\"./board.js\"));\n\nvar _child_process = require(\"child_process\");\n\nvar _drawBoard = _interopRequireDefault(require(\"./draw-board.js\"));\n\nrequire(\"./game-app.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import { player1, player2 } from \"./app.js\";\n//store parent node\nvar board = document.querySelector(\"section\"); // renderBoard(boardMatrix, board, getCoordinates);\n///the move object\n// let playerMove = {\n//   xStart: null,\n//   yStart: null,\n//   xEnd: null,\n//   yEnd: null,\n//   reset() {\n//     this.xStart = null;\n//     this.yStart = null;\n//     this.xEnd = null;\n//     this.yEnd = null;\n//   }\n// };\n// let body = document.querySelector(\"div\");\n// let playerData = document.getElementById(\"player-data\");\n// let userPlayFrom = document.createElement(\"p\");\n// userPlayFrom.textContent = \"Move from: \";\n// let userPlayTo = document.createElement(\"p\");\n// userPlayTo.textContent = \"Move to: \";\n// playerData.appendChild(userPlayFrom);\n// playerData.appendChild(userPlayTo);\n////////////\n// function getCoordinates(e) {\n//   e.preventDefault();\n//   console.log(\"the target id: \", e.target.id.split(\"\"));\n//   let coordinate = e.target.id.split(\"\");\n//   if (playerMove.xStart === null) {\n//     playerMove.xStart = parseInt(coordinate[0], 10);\n//     playerMove.yStart = parseInt(coordinate[1], 10);\n//     appendTextNode(userPlayFrom, playerMove.yStart, playerMove.xStart);\n//   } else if (playerMove.xEnd === null) {\n//     playerMove.xEnd = parseInt(coordinate[0], 10);\n//     playerMove.yEnd = parseInt(coordinate[1], 10);\n//     appendTextNode(userPlayTo, playerMove.yEnd, playerMove.xEnd);\n//   }\n// }\n// create submit to submit the input and output\n// let submit = document.createElement(\"button\");\n// submit.textContent = \"Submit Move\";\n// playerData.appendChild(submit);\n// submit.addEventListener(\"click\", clickHandler);\n// function clickHandler(e) {\n//   e.preventDefault();\n//   if (\n//     boardMatrix[playerMove.yStart][playerMove.xStart] &&\n//     playerMove.xEnd !== null\n//   ) {\n//     if (boardMatrix[playerMove.yEnd][playerMove.xEnd] !== null) {\n//       alert(\"That space is already occupied. Please try again\");\n//     } else {\n//       // returns boolean true if piece was successfully moved\n//       player1.move(boardMatrix, playerMove);\n//       let moved = boardMatrix[playerMove.yStart][\n//         playerMove.xStart\n//       ].checkAndUpdate(playerMove.xEnd, playerMove.yEnd, boardMatrix);\n//       if (!moved) {\n//         alert(\"Not a valid move, please try again.\");\n//       }\n//     }\n//   } else {\n//     alert(\"There is no piece on the board at that position. Please try again.\");\n//   }\n//   playerMove.reset();\n//   resetPlayerData();\n// }\n// function resetPlayerData() {\n//   userPlayFrom.textContent = \"Move from: \";\n//   userPlayTo.textContent = \"Move to: \";\n// }\n// function appendTextNode(appendTo, row, col) {\n//   let textNode = document.createTextNode(`row = ${row}, col=${col}`);\n//   appendTo.appendChild(textNode);\n// }"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"src/index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"src/index.js","original":{"line":3,"column":0}},{"generated":{"line":7,"column":0},"source":"src/index.js","original":{"line":4,"column":0}},{"generated":{"line":9,"column":0},"source":"src/index.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":0},"source":"src/index.js","original":{"line":6,"column":0}},{"generated":{"line":15,"column":0},"source":"src/index.js","original":{"line":7,"column":0}},{"generated":{"line":16,"column":0},"source":"src/index.js","original":{"line":9,"column":0}},{"generated":{"line":17,"column":0},"source":"src/index.js","original":{"line":10,"column":0}},{"name":"board","generated":{"line":17,"column":4},"source":"src/index.js","original":{"line":10,"column":4}},{"generated":{"line":17,"column":9},"source":"src/index.js","original":{"line":10,"column":9}},{"name":"document","generated":{"line":17,"column":12},"source":"src/index.js","original":{"line":10,"column":12}},{"generated":{"line":17,"column":20},"source":"src/index.js","original":{"line":10,"column":20}},{"name":"querySelector","generated":{"line":17,"column":21},"source":"src/index.js","original":{"line":10,"column":21}},{"generated":{"line":17,"column":34},"source":"src/index.js","original":{"line":10,"column":12}},{"generated":{"line":17,"column":35},"source":"src/index.js","original":{"line":10,"column":35}},{"generated":{"line":17,"column":44},"source":"src/index.js","original":{"line":10,"column":12}},{"generated":{"line":17,"column":45},"source":"src/index.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":47},"source":"src/index.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"src/index.js","original":{"line":14,"column":0}},{"generated":{"line":19,"column":0},"source":"src/index.js","original":{"line":15,"column":0}},{"generated":{"line":20,"column":0},"source":"src/index.js","original":{"line":16,"column":0}},{"generated":{"line":21,"column":0},"source":"src/index.js","original":{"line":17,"column":0}},{"generated":{"line":22,"column":0},"source":"src/index.js","original":{"line":18,"column":0}},{"generated":{"line":23,"column":0},"source":"src/index.js","original":{"line":19,"column":0}},{"generated":{"line":24,"column":0},"source":"src/index.js","original":{"line":20,"column":0}},{"generated":{"line":25,"column":0},"source":"src/index.js","original":{"line":21,"column":0}},{"generated":{"line":26,"column":0},"source":"src/index.js","original":{"line":22,"column":0}},{"generated":{"line":27,"column":0},"source":"src/index.js","original":{"line":23,"column":0}},{"generated":{"line":28,"column":0},"source":"src/index.js","original":{"line":24,"column":0}},{"generated":{"line":29,"column":0},"source":"src/index.js","original":{"line":25,"column":0}},{"generated":{"line":30,"column":0},"source":"src/index.js","original":{"line":26,"column":0}},{"generated":{"line":31,"column":0},"source":"src/index.js","original":{"line":28,"column":0}},{"generated":{"line":32,"column":0},"source":"src/index.js","original":{"line":29,"column":0}},{"generated":{"line":33,"column":0},"source":"src/index.js","original":{"line":31,"column":0}},{"generated":{"line":34,"column":0},"source":"src/index.js","original":{"line":32,"column":0}},{"generated":{"line":35,"column":0},"source":"src/index.js","original":{"line":34,"column":0}},{"generated":{"line":36,"column":0},"source":"src/index.js","original":{"line":35,"column":0}},{"generated":{"line":37,"column":0},"source":"src/index.js","original":{"line":37,"column":0}},{"generated":{"line":38,"column":0},"source":"src/index.js","original":{"line":38,"column":0}},{"generated":{"line":39,"column":0},"source":"src/index.js","original":{"line":40,"column":0}},{"generated":{"line":40,"column":0},"source":"src/index.js","original":{"line":42,"column":0}},{"generated":{"line":41,"column":0},"source":"src/index.js","original":{"line":43,"column":0}},{"generated":{"line":42,"column":0},"source":"src/index.js","original":{"line":44,"column":0}},{"generated":{"line":43,"column":0},"source":"src/index.js","original":{"line":45,"column":0}},{"generated":{"line":44,"column":0},"source":"src/index.js","original":{"line":46,"column":0}},{"generated":{"line":45,"column":0},"source":"src/index.js","original":{"line":47,"column":0}},{"generated":{"line":46,"column":0},"source":"src/index.js","original":{"line":48,"column":0}},{"generated":{"line":47,"column":0},"source":"src/index.js","original":{"line":49,"column":0}},{"generated":{"line":48,"column":0},"source":"src/index.js","original":{"line":50,"column":0}},{"generated":{"line":49,"column":0},"source":"src/index.js","original":{"line":51,"column":0}},{"generated":{"line":50,"column":0},"source":"src/index.js","original":{"line":52,"column":0}},{"generated":{"line":51,"column":0},"source":"src/index.js","original":{"line":53,"column":0}},{"generated":{"line":52,"column":0},"source":"src/index.js","original":{"line":54,"column":0}},{"generated":{"line":53,"column":0},"source":"src/index.js","original":{"line":55,"column":0}},{"generated":{"line":54,"column":0},"source":"src/index.js","original":{"line":57,"column":0}},{"generated":{"line":55,"column":0},"source":"src/index.js","original":{"line":58,"column":0}},{"generated":{"line":56,"column":0},"source":"src/index.js","original":{"line":59,"column":0}},{"generated":{"line":57,"column":0},"source":"src/index.js","original":{"line":60,"column":0}},{"generated":{"line":58,"column":0},"source":"src/index.js","original":{"line":61,"column":0}},{"generated":{"line":59,"column":0},"source":"src/index.js","original":{"line":63,"column":0}},{"generated":{"line":60,"column":0},"source":"src/index.js","original":{"line":64,"column":0}},{"generated":{"line":61,"column":0},"source":"src/index.js","original":{"line":65,"column":0}},{"generated":{"line":62,"column":0},"source":"src/index.js","original":{"line":66,"column":0}},{"generated":{"line":63,"column":0},"source":"src/index.js","original":{"line":67,"column":0}},{"generated":{"line":64,"column":0},"source":"src/index.js","original":{"line":68,"column":0}},{"generated":{"line":65,"column":0},"source":"src/index.js","original":{"line":69,"column":0}},{"generated":{"line":66,"column":0},"source":"src/index.js","original":{"line":70,"column":0}},{"generated":{"line":67,"column":0},"source":"src/index.js","original":{"line":71,"column":0}},{"generated":{"line":68,"column":0},"source":"src/index.js","original":{"line":72,"column":0}},{"generated":{"line":69,"column":0},"source":"src/index.js","original":{"line":73,"column":0}},{"generated":{"line":70,"column":0},"source":"src/index.js","original":{"line":74,"column":0}},{"generated":{"line":71,"column":0},"source":"src/index.js","original":{"line":75,"column":0}},{"generated":{"line":72,"column":0},"source":"src/index.js","original":{"line":76,"column":0}},{"generated":{"line":73,"column":0},"source":"src/index.js","original":{"line":78,"column":0}},{"generated":{"line":74,"column":0},"source":"src/index.js","original":{"line":79,"column":0}},{"generated":{"line":75,"column":0},"source":"src/index.js","original":{"line":80,"column":0}},{"generated":{"line":76,"column":0},"source":"src/index.js","original":{"line":81,"column":0}},{"generated":{"line":77,"column":0},"source":"src/index.js","original":{"line":82,"column":0}},{"generated":{"line":78,"column":0},"source":"src/index.js","original":{"line":83,"column":0}},{"generated":{"line":79,"column":0},"source":"src/index.js","original":{"line":84,"column":0}},{"generated":{"line":80,"column":0},"source":"src/index.js","original":{"line":85,"column":0}},{"generated":{"line":81,"column":0},"source":"src/index.js","original":{"line":86,"column":0}},{"generated":{"line":82,"column":0},"source":"src/index.js","original":{"line":87,"column":0}},{"generated":{"line":83,"column":0},"source":"src/index.js","original":{"line":89,"column":0}},{"generated":{"line":84,"column":0},"source":"src/index.js","original":{"line":90,"column":0}},{"generated":{"line":85,"column":0},"source":"src/index.js","original":{"line":91,"column":0}},{"generated":{"line":86,"column":0},"source":"src/index.js","original":{"line":92,"column":0}},{"generated":{"line":87,"column":0},"source":"src/index.js","original":{"line":94,"column":0}},{"generated":{"line":88,"column":0},"source":"src/index.js","original":{"line":95,"column":0}},{"generated":{"line":89,"column":0},"source":"src/index.js","original":{"line":96,"column":0}},{"generated":{"line":90,"column":0},"source":"src/index.js","original":{"line":97,"column":0}}],"sources":{"src/index.js":"import \"./styles.css\";\n\nimport boardMatrix from \"./board.js\";\nimport { spawn } from \"child_process\";\nimport renderBoard from \"./draw-board.js\";\nimport \"./game-app.js\";\n// import { player1, player2 } from \"./app.js\";\n\n//store parent node\nvar board = document.querySelector(\"section\");\n\n// renderBoard(boardMatrix, board, getCoordinates);\n\n///the move object\n// let playerMove = {\n//   xStart: null,\n//   yStart: null,\n//   xEnd: null,\n//   yEnd: null,\n//   reset() {\n//     this.xStart = null;\n//     this.yStart = null;\n//     this.xEnd = null;\n//     this.yEnd = null;\n//   }\n// };\n\n// let body = document.querySelector(\"div\");\n// let playerData = document.getElementById(\"player-data\");\n\n// let userPlayFrom = document.createElement(\"p\");\n// userPlayFrom.textContent = \"Move from: \";\n\n// let userPlayTo = document.createElement(\"p\");\n// userPlayTo.textContent = \"Move to: \";\n\n// playerData.appendChild(userPlayFrom);\n// playerData.appendChild(userPlayTo);\n\n////////////\n\n// function getCoordinates(e) {\n//   e.preventDefault();\n//   console.log(\"the target id: \", e.target.id.split(\"\"));\n//   let coordinate = e.target.id.split(\"\");\n//   if (playerMove.xStart === null) {\n//     playerMove.xStart = parseInt(coordinate[0], 10);\n//     playerMove.yStart = parseInt(coordinate[1], 10);\n//     appendTextNode(userPlayFrom, playerMove.yStart, playerMove.xStart);\n//   } else if (playerMove.xEnd === null) {\n//     playerMove.xEnd = parseInt(coordinate[0], 10);\n//     playerMove.yEnd = parseInt(coordinate[1], 10);\n//     appendTextNode(userPlayTo, playerMove.yEnd, playerMove.xEnd);\n//   }\n// }\n\n// create submit to submit the input and output\n// let submit = document.createElement(\"button\");\n// submit.textContent = \"Submit Move\";\n// playerData.appendChild(submit);\n// submit.addEventListener(\"click\", clickHandler);\n\n// function clickHandler(e) {\n//   e.preventDefault();\n//   if (\n//     boardMatrix[playerMove.yStart][playerMove.xStart] &&\n//     playerMove.xEnd !== null\n//   ) {\n//     if (boardMatrix[playerMove.yEnd][playerMove.xEnd] !== null) {\n//       alert(\"That space is already occupied. Please try again\");\n//     } else {\n//       // returns boolean true if piece was successfully moved\n//       player1.move(boardMatrix, playerMove);\n//       let moved = boardMatrix[playerMove.yStart][\n//         playerMove.xStart\n//       ].checkAndUpdate(playerMove.xEnd, playerMove.yEnd, boardMatrix);\n\n//       if (!moved) {\n//         alert(\"Not a valid move, please try again.\");\n//       }\n//     }\n//   } else {\n//     alert(\"There is no piece on the board at that position. Please try again.\");\n//   }\n//   playerMove.reset();\n//   resetPlayerData();\n// }\n\n// function resetPlayerData() {\n//   userPlayFrom.textContent = \"Move from: \";\n//   userPlayTo.textContent = \"Move to: \";\n// }\n\n// function appendTextNode(appendTo, row, col) {\n//   let textNode = document.createTextNode(`row = ${row}, col=${col}`);\n//   appendTo.appendChild(textNode);\n// }\n"},"lineCount":null}},"error":null,"hash":"cc09d4291a46b3683050695e745bb17f","cacheData":{"env":{}}}